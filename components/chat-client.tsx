"use client";
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/p8b7C0Fg9Gz
 */
import { Avatar } from "@/components/ui/avatar";
import { Card } from "@/components/ui/card";
import { Toggle } from "@/components/ui/toggle";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { BotIcon, User2Icon } from "lucide-react";
import { useChat } from "ai/react";
import { cn } from "@/lib/utils";
import { useEffect, useRef, useState } from "react";

export function ChatClient() {
  const [shouldUseOpenAI, setShouldUseOpenAI] = useState(false);
  const { messages, input, handleInputChange, handleSubmit } = useChat({
    body: {
      shouldUseOpenAI,
    },
  });

  const scrollRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    const element = document.querySelector("#chat-bottom");
    element?.scrollIntoView({
      behavior: "smooth",
    });
  }, [messages]);

  return (
    <main className="h-screen max-w-7xl mx-auto flex flex-col">
      <div className="flex-grow overflow-y-auto p-4">
        <div className="space-y-6">
          {messages.map((m) => (
            <Card
              className={cn(
                "p-4",
                m.role === "user"
                  ? "bg-blue-500 text-white dark:bg-blue-600"
                  : "bg-zinc-100 text-black dark:bg-zinc-800"
              )}
              key={m.id}
            >
              <div className="flex items-start space-x-4">
                <Avatar className="w-8 h-8">
                  {m.role === "user" ? (
                    <User2Icon strokeWidth={1.5} />
                  ) : (
                    <BotIcon />
                  )}
                </Avatar>
                <div>
                  {m.role === "user" ? (
                    <h2 className="font-bold">User</h2>
                  ) : (
                    <h2 className="font-semibold">Assistant</h2>
                  )}
                  {m.content}
                </div>
              </div>
            </Card>
          ))}
        </div>
        <div ref={scrollRef} id="chat-bottom"></div>
      </div>
      <form
        className="flex items-center p-6 space-x-4 bg-white dark:bg-gray-900"
        onSubmit={handleSubmit}
      >
        <Toggle
          aria-label="Switch mode"
          onClick={() => setShouldUseOpenAI(!shouldUseOpenAI)}
          className="p-6"
          variant="outline"
        >
          <SwitchCameraIcon className="mr-2 h-4 w-4" />
          {shouldUseOpenAI ? "OpenAI" : "Mistral"}
        </Toggle>
        <div className="flex-grow  flex items-center space-x-2">
          <Input
            value={input}
            onChange={handleInputChange}
            className="flex-grow p-6"
            placeholder="Write a message..."
            type="text"
          />
          <Button className="p-6">Send</Button>
        </div>
      </form>
    </main>
  );
}

function SwitchCameraIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M11 19H4a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h5" />
      <path d="M13 5h7a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-5" />
      <circle cx="12" cy="12" r="3" />
      <path d="m18 22-3-3 3-3" />
      <path d="m6 2 3 3-3 3" />
    </svg>
  );
}
